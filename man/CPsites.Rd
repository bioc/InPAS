% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CPsites.R
\name{CPsites}
\alias{CPsites}
\title{predict cleavage and polyadenylation (CP) sites}
\usage{
CPsites(
  coverage,
  groupList = NULL,
  genome,
  utr3,
  window_size = 100,
  search_point_START = 50,
  search_point_END = NA,
  cutStart = window_size,
  cutEnd = 0,
  adjust_distal_polyA_end = TRUE,
  coverage_threshold = 5,
  long_coverage_threshold = 2,
  background = c("same_as_long_coverage_threshold", "1K", "5K", "10K", "50K"),
  txdb = NA,
  PolyA_PWM = NA,
  classifier = NA,
  classifier_cutoff = 0.8,
  step = 1,
  two_way = FALSE,
  shift_range = window_size,
  BPPARAM = NULL,
  tmpfolder = NULL,
  silence = TRUE
)
}
\arguments{
\item{coverage}{coverage for each sample, output from [coverageFromBedGraph()]}

\item{groupList}{group list of tag names}

\item{genome}{An object of [BSgenome::BSgenome-class]}

\item{utr3}{output of [utr3Annotation()]}

\item{window_size}{window size for novel distal CP site searching 
and adjusted CP site searching, default: 100}

\item{search_point_START}{start point for searching}

\item{search_point_END}{end point for searching}

\item{cutStart}{what percentage or how many nucleotides should be 
removed from the start before search? It can be a decimal in [0,1) 
or non-negative integer. 0.1 means 10 percent, 25 means cut first 25}

\item{cutEnd}{what percentage or how many nucleotides should be removed 
from the end before search. See cutStart}

\item{adjust_distal_polyA_end}{If true, adjust distal polyA end 
by [cleanUpdTSeq::cleanUpdTSeq-package]}

\item{coverage_threshold}{cutoff  threshold of coverage for first 
100 nucleotides. If the coverage of first 100 nucleotides is 
lower than coverage_threshold, that transcript will be dropped}

\item{long_coverage_threshold}{cutoff threshold for coverage 
in the region of long 3' UTR form. If the coverage in the region of 
long form is less than long_coverage_threshold, that transcript 
will be dropped}

\item{background}{the range for calculating cutoff threshold of 
local background}

\item{txdb}{an object of [GenomicFeatures::TxDb-class]}

\item{PolyA_PWM}{position Weight Matrix of polyA signal, such as AAUAAA.}

\item{classifier}{an object of [cleanUpdTSeq::PASclassifier-class]}

\item{classifier_cutoff}{floating point number between 0 and 1. This is 
the cutoff used to assign whether a putative pA is true or false. For
example, classifier_cutoff = 0.5 will assign an putative pA site with 
prob.1 > 0.5 to the True class (1), and any putative pA site with 
prob.1 <= 0.5 as False (0)}

\item{step}{integer, adjusting step size, default 1, means adjust by 
each base using the cleanUpdTSeq algorithm}

\item{two_way}{logical, Search the proximal site from both direction or not}

\item{shift_range}{integer, the shift range for polyA site searching}

\item{BPPARAM}{an optional [BiocParallel::BiocParallelParam-class] 
instance determining the parallel back-end to be used during evaluation, 
or a list of BiocParallelParam instances, to be applied in sequence for
nested calls to bplapply.}

\item{tmpfolder}{temp folder which could be used to save and reload
the analysis data for resuming analysis}

\item{silence}{report progress or not. By default it doesn't 
report progress.}
}
\value{

}
\description{
predict alternative cleavage and polyadenylation (CP or APA) sites.
}
\examples{
if(interactive()){
   library(BSgenome.Mmusculus.UCSC.mm10)
   path <- file.path(find.package("InPAS"), "extdata")
   bedgraphs <- file.path(path, "Baf3.extract.bedgraph")
   data(utr3.mm10)
   tags <- "Baf3"
   genome <- BSgenome.Mmusculus.UCSC.mm10
   coverage <- coverageFromBedGraph(bedgraphs, tags, genome, hugeData=FALSE)
   CP <- CPsites(coverage=coverage, gp1=tags,
                 gp2=NULL, genome=genome,
                 utr3=utr3.mm10, coverage_threshold=5,
                 long_coverage_threshold=5)
}
}
\references{
Cheung MS, Down TA, Latorre I, Ahringer J. 
Systematic bias in high-throughput sequencing data and its 
correction by BEADS. Nucleic Acids Res. 2011 Aug;39(15):e103. 
doi: 10.1093/nar/gkr425. Mappability could be calculated by 
[GEM](http://algorithms.cnag.cat/wiki/Man:gem-mappability)
Derrien T, Estelle J, Marco Sola S, Knowles DG, Raineri E, 
Guigo R, Ribeca P. Fast computation and applications of 
genome mappability. PLoS One. 2012;7(1):e30377. 
doi: 10.1371/journal.pone.0030377.
}
